{"version":3,"sources":["../../src/components/feature.js"],"names":["Feature","props","displayName","state","selected_point","feature","geoJson","listeners","addPoint","bind","findPoint","selectPoint","deletePoint","initListeners","addListener","removeListeners","checkPropEditable","setDraggable","setIcon","updateFeatureGeometry","getGeometryForFeature","generateFeatureFromGeoJson","updateProperties","mounted","latLng","editable","fastEditing","point","type","getGeometry","getType","pointArray","getAt","getArray","newGeometry","maps","Data","Polygon","slice","index","length","setGeometry","setState","geometry","linearRing","i","lat","lng","foundPoint","onDelete","onChange","data","event","getId","toGeoJson","JSON","parse","stringify","infoWindow","e","InfoWindow","content","position","toJSON","open","map","onClick","coords","Object","assign","id","stop","onRightClick","callback","forEach","listener","remove","push","nextProps","properties","nextState","prev_props","draggable","icon","undefined","console","error","add","Error","names","keys","name","overrideStyle","fillColor","setProperty","resetGeometry","currGeoJson","coordinates","currPoint","newPoint","latLngs","LatLng","coordinate","pop","polygon","Point","warn","Component","propTypes","bool","object","isRequired","string","func"],"mappings":"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","file":"feature.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { GeoJSON } from '../utils/utils';\n\n//Rational: This component emulates the google Data.Feature.\n//It lives in the context of a <DataLayer /> Component and interfaces with it's Data object that has been passed as prop to it.\n/** The component that handles individual features within a data layer. */\nclass Feature extends React.Component {\n  constructor(props) {\n    super(props);\n    this.displayName = 'Feature';\n\n    this.state = {\n      selected_point: null,\n      feature: null,\n      geoJson: null\n    }\n    this.listeners = [];\n\n    //Editor helper functions\n    this.addPoint = this.addPoint.bind(this);\n    this.findPoint = this.findPoint.bind(this);\n    this.selectPoint = this.selectPoint.bind(this);\n    this.deletePoint = this.deletePoint.bind(this);\n\n    this.initListeners = this.initListeners.bind(this);\n    this.addListener = this.addListener.bind(this);\n    this.removeListeners = this.removeListeners.bind(this);\n    //Check props.\n    this.checkPropEditable = this.checkPropEditable.bind(this);\n    this.setDraggable = this.setDraggable.bind(this);\n    this.setIcon = this.setIcon.bind(this);\n\n    this.updateFeatureGeometry = this.updateFeatureGeometry.bind(this);\n    this.getGeometryForFeature = this.getGeometryForFeature.bind(this);\n    this.generateFeatureFromGeoJson = this.generateFeatureFromGeoJson.bind(this);\n    this.updateProperties = this.updateProperties.bind(this);\n    this.mounted = false;\n  }\n  ///--------------------------------Editor Helper Methods-----------------------------------///\n  addPoint(latLng) {\n    const { feature } = this.state;\n    const { editable, fastEditing } = this.props;\n    const point = this.state.selected_point ? this.state.selected_point : null;\n    if(!feature || !latLng || !point || !editable || !fastEditing) {\n      return;\n    }\n\n    const type = feature.getGeometry().getType();\n    switch(type) {\n      case 'Polygon': {\n        const pointArray = feature.getGeometry().getAt(0).getArray();\n        const newGeometry = new this.props.maps.Data.Polygon([[\n          ...pointArray.slice(0, point.index + 1),\n          latLng,\n          ...pointArray.slice(point.index + 1, pointArray.length)\n        ]]);\n        feature.setGeometry(newGeometry);\n        if(this.mounted) {\n          this.setState({ selected_point: { index: point.index + 1, latLng } });\n        }\n        break;\n      }\n    }\n\n  }\n  findPoint(latLng) {\n    const { feature } = this.state;\n\n    if(!feature || !latLng) {\n      return false;\n    }\n\n    switch (feature.getGeometry().getType()) {\n      case 'Polygon': {\n        const geometry = feature.getGeometry();\n        const linearRing = geometry.getAt(0);\n        const pointArray = linearRing.getArray();\n        for(let i = 0; i < pointArray.length; i++) {\n          let point = pointArray[i];\n          if(point.lat() == latLng.lat() && point.lng() == latLng.lng()) {\n            //Match found!\n            return { index: i, latLng: point };\n            break;\n          }\n        }\n        break;\n      }\n    }\n\n    return false;\n  }\n  selectPoint(latLng) {\n    const foundPoint = this.findPoint(latLng);\n    if(foundPoint && this.mounted) {\n      this.setState({ selected_point: foundPoint });\n    }\n  }\n  deletePoint(latLng) {\n    const { feature } = this.state;\n    const { editable, fastEditing } = this.props;\n    const point = this.state.selected_point;\n\n    if(!feature || !latLng || !point || !editable || !fastEditing) {\n      return;\n    }\n\n    const type = feature.getGeometry().getType();\n    switch(type) {\n      case 'Polygon': {\n        const pointArray = feature.getGeometry().getAt(0).getArray();\n\n        if(pointArray.length - 1 < 3) {\n          if(this.props.onDelete) {\n            this.props.onDelete(this.state.geoJson);\n          }\n          return;\n        }\n\n        const newGeometry = new this.props.maps.Data.Polygon([[\n          ...pointArray.slice(0, point.index),\n          ...pointArray.slice(point.index + 1, pointArray.length)\n        ]]);\n\n        feature.setGeometry(newGeometry);\n\n        if(point.index - 1 > -1) {\n          this.selectPoint(pointArray[point.index - 1]);\n        }\n        else {\n          this.selectPoint(pointArray[0])\n        }\n        break;\n      }\n    }\n\n  }\n  ///--------------------------------Listener Management Methods-----------------------------------///\n  initListeners() {\n    //Set geometry listener.\n    if (typeof this.props.onChange === 'function')\n      this.addListener(this.props.data.addListener('setgeometry', (event) => {\n        var { feature } = event;\n        if (feature.getId() == this.state.feature.getId()) {\n          feature.toGeoJson(geoJson => {\n            if(this.mounted) {\n              this.setState({ geoJson: JSON.parse(JSON.stringify(geoJson)) }, () => {\n                if (typeof this.props.onChange === 'function')\n                  this.props.onChange(geoJson);\n              })\n            }\n          });\n        }\n      }));\n\n    //Polygon clicked.\n    if(\n      this.state.feature &&\n      this.props.infoWindow\n    ) {\n      this.addListener(this.props.data.addListener('click', e => {\n        const { feature } = e;\n        if(feature.getId() == this.state.feature.getId()) {\n          const infoWindow = new this.props.maps.InfoWindow({\n            content: this.props.infoWindow,\n            position: e.latLng.toJSON()\n          });\n          infoWindow.open(this.props.map);\n        }\n      }));\n    }\n    else if (typeof this.props.onClick === 'function')\n      this.addListener(this.props.data.addListener('click', (event) => {\n        var { feature } = event;\n        if (feature.getId() == this.state.feature.getId()) {\n          //Select the point. (Used in fastEditing mode.)\n          this.selectPoint(event.latLng);\n\n          // event.stop();\n          var coords = event.latLng.toJSON()\n          coords[0] = coords.lng;\n          coords[1] = coords.lat;\n\n          if (this.props.onClick)\n            this.props.onClick(Object.assign({}, event, { id: this.props.id, coords, geoJson: this.state.geoJson }));\n        }\n      }));\n\n    this.addListener(this.props.data.addListener('rightclick', (event) => {\n      var { feature } = event;\n      if (feature.getId() == this.state.feature.getId()) {\n        event.stop();\n        var coords = event.latLng.toJSON()\n        coords[0] = coords.lng;\n        coords[1] = coords.lat;\n\n        if (this.props.onRightClick)\n          this.props.onRightClick(Object.assign({}, event, { id: this.props.id, coords, geoJson: this.state.geoJson }));\n      }\n    }));\n\n    this.addListener(this.props.maps.event.addListener(this.props.map, 'click', ({latLng}) => this.addPoint(latLng)));\n    this.addListener(this.props.maps.event.addListener(this.props.map, 'rightclick', () => this.deletePoint(this.state.selected_point)));\n    this.addListener(this.props.data.addListener('click', event => {\n      const { latLng } = event;\n      this.addPoint(latLng);\n    }))\n  }\n  removeListeners(callback) {\n    this.listeners.forEach(listener => listener.remove());\n    this.listeners = [];\n  }\n  addListener(listener, callback) {\n    var listeners = this.listeners.slice();\n    listeners.push(listener);\n    this.listeners = listeners;\n  }\n  ///--------------------------------Lifecycle Methods-----------------------------------///\n  componentWillReceiveProps(nextProps) {\n    // console.log(\"F: componentWillRecieveProps\");\n    if (nextProps.data && this.state.feature) {\n      this.checkPropEditable(nextProps);\n      this.updateProperties(nextProps.geoJson.properties);\n      this.updateFeatureGeometry(nextProps.geoJson)\n    }\n    // console.log(\"Feature will recieve props.\");\n  }\n  componentWillUpdate(nextProps, nextState) {\n    this.removeListeners();\n  }\n  componentDidUpdate(prev_props) {\n    this.initListeners();\n    if(prev_props.draggable != this.props.draggable) {\n      this.setDraggable();\n    }\n    if(prev_props.icon != this.props.icon) {\n      this.setIcon();\n    }\n  }\n  componentDidMount() {\n    // console.log(\"F: componentDidMount\")\n    this.mounted = true;\n    if (this.props.data) {\n      var id = undefined;\n      // console.log(\"Feature Mounted with ID:\", this.props.id);\n      if (this.props.id) {\n        id = this.props.id\n      }//Force the user to supply the property to use as the id.\n      var feature;\n      try {\n        feature = this.generateFeatureFromGeoJson(this.props.geoJson)\n      }\n      catch (e) {\n        console.error(e);\n      }\n\n      this.setState({\n        feature,\n        geoJson: JSON.parse(JSON.stringify(this.props.geoJson)) //Deep copy\n      }, () => {\n        this.props.data.add(feature);\n\n        this.initListeners();\n        this.checkPropEditable(this.props);\n        this.setDraggable();\n        this.setIcon();\n      })\n    }\n    else\n      console.error(new Error(\"You must put this <Feature /> component within the context of a <DataLayer /> Component.\"))\n  }\n  componentWillUnmount() {\n    this.mounted = false;\n    if (this.props.data)\n      this.props.data.remove(this.state.feature);\n\n    if (this.state.listeners)\n      this.removeListeners();\n  }\n\n  ///--------------------------------Google Data.Feature Managmenent Methods-----------------------------------///\n  updateProperties(properties) {\n    if(!properties) return;\n    const names = Object.keys(properties);\n    names.forEach(name => {\n      switch(name) {\n        case 'fillColor': {\n          this.props.data.overrideStyle(this.state.feature, { fillColor: properties[name] })\n          break;\n        }\n      }\n      this.state.feature.setProperty(name, properties[name]);\n    });\n  }\n  updateFeatureGeometry(geoJson) {\n    //resets the geometry to match the geojson.\n    var resetGeometry = f => {\n      // this.removeListeners(() => {\n      this.removeListeners();\n      var geometry = this.getGeometryForFeature(geoJson);\n      this.state.feature.setGeometry(geometry);\n      this.initListeners();\n      // console.log(\"F: refreshed geometry for id: \", this.props.id);\n      // this.initListeners(); //Restart the listening on this geometry.\n      // }); //Stop all listening on this geometry.\n    }\n\n    //Diff: this logic block makes sure that we have to reset the geometry.\n    if (this.state.feature) {\n      var type = this.state.feature.getGeometry().getType();\n      switch (type) {\n        case \"Polygon\":\n          var currGeoJson = this.state.geoJson;\n          //If the coordinates length is not the same, obviously something changed so reset the geometry.\n          if (geoJson.geometry.coordinates[0].length != currGeoJson.geometry.coordinates[0].length) {\n            // console.log(\"F: Entered unequal coordinate block for id: \", this.props.id);\n            resetGeometry();\n          }\n          //If the coordinate lengths are the same, check to see if all of the points are equal. If any of them are not equal, obviously something changed so reset the geometry.\n          else {\n            // console.log(\"F: Starting coordinate comparison for id: \", this.props.id , currGeoJson.geometry.coordinates[0], geoJson.geometry.coordinates[0]);\n\n            for (var i = currGeoJson.geometry.coordinates[0].length - 1; i >= 0; i--) {\n              var currPoint = currGeoJson.geometry.coordinates[0][i];\n              var newPoint = geoJson.geometry.coordinates[0][i];\n              if (currPoint[0] != newPoint[0] || currPoint[1] != newPoint[1]) {\n                // console.log(\"F: Entered modified point block for id: \", this.props.id);\n                resetGeometry();\n                break;\n              }\n            };\n          }\n          break;\n        case \"Point\":\n          var currGeoJson = this.state.geoJson;\n          if (currGeoJson.geometry.coordinates[0] != geoJson.geometry.coordinates[0] ||\n          currGeoJson.geometry.coordinates[1] != geoJson.geometry.coordinates[1]) {\n            resetGeometry();\n            break;\n          }\n        break;\n      }\n    }\n  }\n  getGeometryForFeature(geoJson) {\n    var { map, maps } = this.props;\n    switch (geoJson.geometry.type) {\n      case \"Polygon\":\n        var latLngs = geoJson.geometry.coordinates[0].map(coordinate => new maps.LatLng({ lng: coordinate[0], lat: coordinate[1] }));\n        latLngs.pop(); //Remove the last item.\n        var properties = geoJson.properties;\n        var polygon = new maps.Data.Polygon([latLngs]);\n        return polygon;\n      case \"Point\":\n        var latLng = new maps.LatLng({ lng: geoJson.geometry.coordinates[0], lat: geoJson.geometry.coordinates[1] })\n        var properties = geoJson.properties;\n        var point = new maps.Data.Point(latLng)\n        return point;\n      default:\n        console.warn(\"You cannot use anything other than Polygons or Points for features currently.\");\n    }\n    return null;\n  }\n  generateFeatureFromGeoJson(geoJson) {\n    var { map, maps } = this.props;\n    var geometry = this.getGeometryForFeature(geoJson);\n    var feature = new maps.Data.Feature({\n      geometry,\n      id: this.props.id,\n      properties: geoJson.properties\n    });\n    return feature;\n  }\n  checkPropEditable(props) {\n    // console.log(\"Checking editable.\");\n    try {\n      if (typeof props.editable !== 'undefined' && props.editable) {\n        props.data.overrideStyle(this.state.feature, { editable: true });\n      }\n      else\n        props.data.overrideStyle(this.state.feature, { editable: false });\n\n    }\n    catch (e) {\n      console.error(e);\n    }\n  }\n  setDraggable() {\n    if(this.props.draggable) {\n      this.props.data.overrideStyle(this.state.feature, { draggable: true });\n    }\n    else {\n      this.props.data.overrideStyle(this.state.feature, { draggable: false });\n    }\n  }\n  setIcon() {\n    if(this.props.geoJson.geometry.type == 'Point') {\n      if(this.props.icon) {\n        this.props.data.overrideStyle(this.state.feature, { icon: this.props.icon });\n      }\n    }\n  }\n\n  render() {\n    if (this.props.data && this.state.feature) {\n      this.checkPropEditable(this.props);\n    }\n    // console.log(\"F: feature Rendered\");\n    return <noscript />;\n  }\n}\n\nFeature.propTypes = {\n  editable: PropTypes.bool,\n  fastEditing: PropTypes.bool, //This mode enables point creation by right clicking on the map.\n  maps: PropTypes.object,\n  map: PropTypes.object,\n  data: PropTypes.object,\n  geoJson: PropTypes.object.isRequired,\n  id: PropTypes.string.isRequired,\n  onDelete: PropTypes.func,\n  onChange: PropTypes.func,\n  onClick: PropTypes.func\n}\n\nexport default Feature;\n"]}