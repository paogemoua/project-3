{"version":3,"sources":["../../src/components/kmlLayer.js"],"names":["KmlLayer","props","displayName","state","map","maps","zIndex","preserveViewport","screenOverlays","suppressInfoWindows","url","setState","listener","addListener","status","getStatus","console","error","onStatusChanged","Error","setMap","remove","setUrl","Component","propTypes","object","number","isRequired","bool","string","func"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;;;;;;;;;IAEMA,Q;;;AACF,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA,oHACTA,KADS;;AAEf,UAAKC,WAAL,GAAmB,UAAnB;AACA,UAAKC,KAAL,GAAa;AACZH,gBAAW;AADC,KAAb;AAHe;AAMlB;;;;wCACmB;AAAA;;AACnB,UAAG,KAAKC,KAAL,CAAWG,GAAX,IAAkB,KAAKH,KAAL,CAAWI,IAAhC,EACA;AAAA,qBASK,KAAKJ,KATV;AAAA,YAEEG,GAFF,UAEEA,GAFF;AAAA,YAGEC,IAHF,UAGEA,IAHF;AAAA,YAIEC,MAJF,UAIEA,MAJF;AAAA,YAKEC,gBALF,UAKEA,gBALF;AAAA,YAMEC,cANF,UAMEA,cANF;AAAA,YAOEC,mBAPF,UAOEA,mBAPF;AAAA,YAQEC,GARF,UAQEA,GARF;;;AAWC,YAAIV,WAAW,IAAIK,KAAKL,QAAT,CAAkB;AAChCI,kBADgC;AAEhCE,wBAFgC;AAGhCC,4CAHgC;AAIhCC,wCAJgC;AAKhCC,kDALgC;AAMhCC;AANgC,SAAlB,CAAf;AAQA,aAAKC,QAAL,CAAc,EAACX,kBAAD,EAAd;AACE,aAAKY,QAAL,GAAgBZ,SAASa,WAAT,CAAqB,gBAArB,EAAuC,UAACC,MAAD,EAAY;AACjE,kBAAOd,SAASe,SAAT,EAAP;AACE,iBAAK,kBAAL;AAA0B;AACxBC,wBAAQC,KAAR,CAAc,0CAAd;AACA,oBAAG,OAAKhB,KAAL,CAAWiB,eAAd,EAA+B;AAC7B,yBAAKjB,KAAL,CAAWiB,eAAX,CAA2BlB,SAASe,SAAT,EAA3B;AACD;AACF;AANH;AAQD,SATe,CAAhB;AAUF,OA/BD,MAiCCC,QAAQC,KAAR,CAAc,IAAIE,KAAJ,CAAU,4GAAV,CAAd;AACD;;;2CACsB;AACtB,UAAG,KAAKhB,KAAL,CAAWH,QAAd,EACC,KAAKG,KAAL,CAAWH,QAAX,CAAoBoB,MAApB,CAA2B,IAA3B;;AAEA,UAAG,KAAKR,QAAR,EAAkB;AAChB,aAAKA,QAAL,CAAcS,MAAd;AACD;AACF;;;6BACQ;AACR,UAAG,KAAKlB,KAAL,CAAWH,QAAX,IAAuB,KAAKC,KAAL,CAAWS,GAAX,IAAkB,KAAKP,KAAL,CAAWH,QAAX,CAAoBU,GAAhE,EACC,KAAKP,KAAL,CAAWH,QAAX,CAAoBsB,MAApB,CAA2B,KAAKrB,KAAL,CAAWS,GAAtC;AACE,aAAO;AAAA;AAAA;AAAA;AAAA,OAAP;AACH;;;;EAxDkB,gBAAMa,S;;AA2D7BvB,SAASwB,SAAT,GAAqB;AACpBnB,QAAO,oBAAUoB,MADG;AAEpBrB,OAAM,oBAAUqB,MAFI;AAGpBnB,UAAS,oBAAUoB,MAAV,CAAiBC,UAHN;AAIpBpB,oBAAmB,oBAAUqB,IAJT;AAKpBpB,kBAAiB,oBAAUoB,IALP;AAMpBnB,uBAAsB,oBAAUmB,IANZ;AAOpBlB,OAAM,oBAAUmB,MAAV,CAAiBF,UAPH;AAQnBT,mBAAiB,oBAAUY;AARR,CAArB;;kBAWe9B,Q","file":"kmlLayer.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass KmlLayer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.displayName = 'KmlLayer';\n        this.state = {\n        \tKmlLayer : null\n        }\n    }\n    componentDidMount() {\n    \tif(this.props.map && this.props.maps)\n    \t{\n    \t\tvar {\n    \t\t\tmap,\n    \t\t\tmaps,\n    \t\t\tzIndex,\n    \t\t\tpreserveViewport,\n    \t\t\tscreenOverlays,\n    \t\t\tsuppressInfoWindows,\n    \t\t\turl\n    \t\t} = this.props;\n\n    \t\tvar KmlLayer = new maps.KmlLayer({\n    \t\t\tmap,\n    \t\t\tzIndex,\n    \t\t\tpreserveViewport,\n    \t\t\tscreenOverlays,\n    \t\t\tsuppressInfoWindows,\n    \t\t\turl\n    \t\t});\n    \t\tthis.setState({KmlLayer});\n        this.listener = KmlLayer.addListener('status_changed', (status) => {\n          switch(KmlLayer.getStatus()) {\n            case 'INVALID_DOCUMENT' : {\n              console.error('Your kml doc is too big for google maps.');\n              if(this.props.onStatusChanged) {\n                this.props.onStatusChanged(KmlLayer.getStatus());\n              }\n            }\n          }\n        })\n    \t}\n    \telse\n    \t\tconsole.error(new Error(\"You must put <KmlLayer /> components within a <Map /> context. Or provide the maps and map props manually.\"))\n    }\n    componentWillUnmount() {\n    \tif(this.state.KmlLayer)\n\t    \tthis.state.KmlLayer.setMap(null);\n\n      if(this.listener) {\n        this.listener.remove();\n      }\n    }\n    render() {\n    \tif(this.state.KmlLayer && this.props.url != this.state.KmlLayer.url)\n\t    \tthis.state.KmlLayer.setUrl(this.props.url);\n        return <div>KmlLayer</div>;\n    }\n}\n\nKmlLayer.propTypes = {\n\tmaps : PropTypes.object,\n\tmap : PropTypes.object,\n\tzIndex : PropTypes.number.isRequired,\n\tpreserveViewport : PropTypes.bool,\n\tscreenOverlays : PropTypes.bool,\n\tsuppressInfoWindows : PropTypes.bool,\n\turl : PropTypes.string.isRequired,\n  onStatusChanged: PropTypes.func\n}\n\nexport default KmlLayer;\n"]}