{"version":3,"sources":["../../src/components/map.js"],"names":["Map","props","displayName","_div_id","Math","floor","Date","now","random","toString","state","maps","map","listeners","ref","bind","getGeocoder","getGoogleMapsApi","getGoogleMap","getOptions","refreshComponentFromProps","centerPropDidChange","boundsPropDidChange","zoomPropDidChange","addListener","removeListeners","setupMapListenerHooks","geocoder","mapOptions","zoom","mapTypeId","MapTypeId","mapType","data","optionsConstructor","Object","assign","center","LatLng","lat","lng","equals","getCenter","setCenter","bounds","sw","ne","LatLngBounds","mapBounds","getBounds","panToBounds","getZoom","setZoom","e","console","error","listener","push","length","pop","remove","assemble","name","callback","event","getOwnPropertyNames","forEach","test","prop","action","slice","toLowerCase","getNorthEast","toJSON","getSouthWest","warn","Error","item","initMapComponentWithLibrary","Geocoder","findDOMNode","mapDiv","setState","onMount","mapsapi","require","then","children","controls","Children","child","cloneElement","undefined","constructor","control","style","Component","propTypes","didMount","func","string","isRequired","object","number","shape"],"mappings":"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","file":"map.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDom from 'react-dom';\nimport {refreshComponentFromProps, isValidMapListener} from '../utils/utils';\n\n/**\n* See [Google Maps Javascript API]{@link https://developers.google.com/maps/documentation/javascript/3.exp/reference}\n* @namespace google.maps\n* @memberof google\n*/\n\n/**\n* See [LatLngLiteral object specification]{@link https://developers.google.com/maps/documentation/javascript/3.exp/reference#LatLngLiteral}\n* @class google.maps.LatLngLiteral\n* @memberof google.maps\n*\n* @property {number} lat\n* @property {number} lng\n*/\n\n/**\n* The Map Component in the root component for the google maps library. It handles the interface between the google maps javascript api and the implementation of the other components.\n* @class Map\n*\n* @property {string} api-key Required. The javascript api key from your [google console]{@link http://console.developer.google.com}.\n* @property {object} mapOptions Optional. A google.maps.MapOptions object.\n*\n* @property {object} props\n* @property {function} props.onMount callback(map, maps) Get's called right after the component is done it's initial render. (Key for triggering outside events that require google maps api to be instantiated.)\n* @property {number} props.zoom\n* @property {google.maps.LatLngLiteral} props.center\n* @property {object} props.latLngBounds\n* @property {google.maps.LatLngLiteral} props.latLngBounds.sw\n* @property {google.maps.LatLngLiteral} props.latLngBounds.ne\n*/\nclass Map extends React.Component {\n    constructor(props) {\n        super(props);\n        this.displayName = 'Map';\n\n\n        var _div_id = \"map_div_\" + Math.floor(Date.now() * Math.random()).toString();\n        /**\n        *   @property {object} state The Map component's internal state.\n        *   @property {object} state.maps A google maps javascript api reference.\n        *   @property {object} state._div_id The div id of this map.\n        */\n        this.state = {\n        \tmaps : null,\n            map : null,\n        \t_div_id\n        }\n        this.listeners = [];\n        this.ref = this.ref.bind(this);\n        this.getGeocoder = this.getGeocoder.bind(this);\n        this.getGoogleMapsApi = this.getGoogleMapsApi.bind(this);\n        this.getGoogleMap = this.getGoogleMap.bind(this);\n\n        this.getOptions = this.getOptions.bind(this);\n\n        this.refreshComponentFromProps = refreshComponentFromProps.bind(this);\n\n        this.centerPropDidChange = this.centerPropDidChange.bind(this);\n        this.boundsPropDidChange = this.boundsPropDidChange.bind(this);\n        this.zoomPropDidChange = this.zoomPropDidChange.bind(this);\n\n        this.addListener = this.addListener.bind(this);\n        this.removeListeners = this.removeListeners.bind(this);\n\n        this.setupMapListenerHooks = this.setupMapListenerHooks.bind(this);\n    }\n    /** Gets the instance of the geocoder tied to this google map. */\n    getGeocoder() {\n        return this.state.geocoder;\n    }\n    /** Gets the google maps api reference from within the component. (Could be used to do google maps api stuff outside of the component) */\n    getGoogleMapsApi() {\n        return this.state.maps;\n    }\n    /** Gets the google maps instance created by `new maps.Map()` keyword. */\n    getGoogleMap() {\n        return this.state.map;\n    }\n    getOptions(maps) {\n        var mapOptions = {\n            zoom : 4,\n            mapTypeId : maps.MapTypeId[!this.props.mapType? \"ROADMAP\" : this.props.mapType],\n            data : null\n        }\n\n        if(this.props.optionsConstructor)\n            mapOptions = Object.assign(mapOptions, new this.props.optionsConstructor(maps));\n\n        return mapOptions;\n    }\n    centerPropDidChange() {\n        var {maps,map} = this.state;\n        var {center} = this.props;\n        if(center)\n            return !new maps.LatLng(center.lat,center.lng).equals(map.getCenter());\n        else\n            return false;\n    }\n    centerHandleChange() {\n        const center = this.state.map.getCenter();\n        if(this.props.center.lat != center.lat && this.props.center.lng != center.lng) {\n            this.state.map.setCenter(this.props.center);\n        }\n    }\n    boundsPropDidChange() {\n        var {bounds} = this.props;\n        if(bounds && bounds.sw && bounds.ne) {\n            bounds = new this.state.maps.LatLngBounds(bounds.sw, bounds.ne);\n        }\n        const mapBounds = this.state.map.getBounds();\n\n        return bounds && mapBounds ? !mapBounds.equals(bounds) : false;\n    }\n    boundsHandleChange() {\n        var {bounds} = this.props;\n        if(bounds && bounds.sw && bounds.ne) {\n            bounds = new this.state.maps.LatLngBounds(bounds.sw, bounds.ne);\n            this.state.map.panToBounds(bounds);\n        }\n        //TODO: Handle bounds change.\n    }\n    zoomPropDidChange() {\n        var {map} = this.state;\n        var {zoom} = this.props;\n        return typeof zoom !== 'undefined' ? (zoom != map.getZoom()) : false;\n    }\n    zoomHandleChange() {\n        var {map} = this.state;\n        var {zoom} = this.props;\n        try {\n            map.setZoom(zoom);\n        }\n        catch(e) {\n            console.error(e);\n        }\n    }\n    addListener(listener) {\n        this.listeners.push(listener);\n    }\n    removeListeners() {\n        while(this.listeners.length > 0) {\n            this.listeners.pop().remove();\n        }\n    }\n    setupMapListenerHooks() {\n        var {maps, map} = this.state;\n        if(maps && map) {\n            this.removeListeners();\n            var assemble = (name, callback) => this.addListener(maps.event.addListener(map, name, callback));\n            var props = Object.getOwnPropertyNames(this.props);\n\n            props.forEach(prop => {\n                if(/^on.*$/.test(prop)) {\n                    var action = prop.slice(2, prop.length); //Remove the 'on' in front of the prop-name.\n                    if(isValidMapListener(action)) {\n                        switch(action.toLowerCase()) {\n                            case 'bounds_changed':case 'boundschanged':\n\n                                assemble('bounds_changed', event => {\n                                    const bounds = map.getBounds()? {ne : map.getBounds().getNorthEast().toJSON(), sw : map.getBounds().getSouthWest().toJSON()} : null;\n                                    this.props[prop](bounds, event)\n                                });\n                                break;\n                            case 'center_changed':case 'centerchanged':\n                                assemble('center_changed', event => {\n                                    const center = map.getCenter();\n                                    this.props[prop](center, event);\n                                });\n                                break;\n                            case 'zoom_changed':case 'zoomchanged':\n                                assemble('zoom_changed', event => {\n                                    const zoom = map.getZoom();\n                                    this.props[prop](zoom, event);\n                                });\n\n                            default:\n                                assemble(action.toLowerCase(), this.props[prop]);\n                                break;\n                        }\n                    }\n                    else {\n                        if(action.toLowerCase() !== 'mount') {\n                            console.warn(new Error(\"You tried adding \" + prop + \" which is not a valid action for a <Map /> component.\"));\n                        }\n                    }\n\n                }\n            });\n        }\n    }\n    ref(name) {\n      return (item) => {\n        this[name] = item;\n      };\n    }\n    componentDidMount() {\n\n\n    \tvar initMapComponentWithLibrary = (maps) => {\n\n    \t\t// window.maps = maps;\n    \t\tvar mapOptions = this.getOptions(maps);\n            try {\n\n                var geocoder = new maps.Geocoder();\n        \t\tvar map = new maps.Map( ReactDom.findDOMNode(this.mapDiv) , mapOptions);\n\n                map.setCenter(!this.props.center? new maps.LatLng(39.5, -98.35) : new maps.LatLng(this.props.center.lat,this.props.center.lng));\n                if(this.props.bounds && this.props.bounds.sw && this.props.bounds.ne) {\n                    const bounds = new maps.LatLngBounds(this.props.bounds.sw, this.props.bounds.ne);\n                    map.panToBounds(bounds);\n                }\n            }\n            catch(e) {\n                console.error(e);\n            }\n            this.setState({\n                map,\n                maps,\n                geocoder\n            }, () => {\n                this.refreshComponentFromProps();\n                if(typeof this.props.onMount === 'function') {\n                    this.props.onMount(this.getGoogleMap(), this.getGoogleMapsApi());\n                }\n            });\n\n            this.setupMapListenerHooks();\n    \t}\n\n    \tif(this.props[\"api-key\"]) {\n        const mapsapi = require('google-maps-api');\n    \t\t// if(!window.maps)\n\t\t    \tmapsapi(this.props[\"api-key\"], ['drawing','geometry','places'])().then(initMapComponentWithLibrary);\n\t\t    // else\n\t\t    // \tinitMapComponentWithLibrary(window.maps);\n    \t}\n    }\n    componentDidUpdate() {\n\n        if(this.state.map) {\n            this.refreshComponentFromProps();\n            this.setupMapListenerHooks();// ?? This may not be necessary. Only on didMount.\n        }\n    }\n    componentWillUnmount() {\n          this.removeListeners();\n    }\n    render() {\n    \tvar children = [];\n    \tvar controls = [];\n\n        if(this.state.maps && this.state.map && this.props.children)\n\t    \tchildren = React.Children.map(this.props.children, child => child ? React.cloneElement(child, {\n\t    \t\tmaps : this.state.maps,\n\t    \t\tmap : this.state.map\n\t    \t}) : undefined );\n\n        if(this.state.maps && this.state.map && this.props.controls && this.props.controls.constructor.name === 'Array') {\n            controls = React.Children.map(this.props.controls, control => control ? React.cloneElement(control, {\n                maps : this.state.maps,\n                map : this.state.map\n            }) : undefined );\n\n        }\n\n        return <div ref={this.ref('mapDiv')} id={this.state._div_id} style={this.props.style}>\n        \t<div>{children}</div>\n            <div>{controls}</div>\n\n        </div>;\n    }\n}\n\nMap.propTypes = {\n    didMount : PropTypes.func,\n    optionsConstructor : PropTypes.func,\n\t\"api-key\" : PropTypes.string.isRequired,\n\tstyle : PropTypes.object,\n    mapType : PropTypes.string,\n    zoom : PropTypes.number,\n    center : PropTypes.shape({\n        lat : PropTypes.number,\n        lng : PropTypes.number\n    }),\n    bounds : PropTypes.shape({\n        sw : PropTypes.shape({\n            lat : PropTypes.number,\n            lng : PropTypes.number\n        }),\n        ne : PropTypes.shape({\n            lat : PropTypes.number,\n            lng : PropTypes.number\n        })\n    })\n}\n\nexport default Map;\n"]}