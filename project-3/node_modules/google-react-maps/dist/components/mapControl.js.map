{"version":3,"sources":["../../src/components/mapControl.js"],"names":["MapControl","props","displayName","cleanMapControlContent","bind","ref","parent","findDOMNode","controlParent","child","controlChildren","appendChild","maps","map","position","children","index","controls","ControlPosition","push","console","warn","name","item","loadMapControlContent","Component","propTypes","object","oneOf","Object","getOwnPropertyNames","isRequired","number"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;AACA;;;;;;;;;IASMA,U;;;AACF,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA,wHACTA,KADS;;AAEf,UAAKC,WAAL,GAAmB,YAAnB;AACA,UAAKC,sBAAL,GAA8B,MAAKA,sBAAL,CAA4BC,IAA5B,OAA9B;AACA,UAAKC,GAAL,GAAW,MAAKA,GAAL,CAASD,IAAT,OAAX;AAJe;AAKlB;;;;6CACwB;AACxB,UAAIE,SAAS,mBAASC,WAAT,CAAqB,KAAKC,aAA1B,CAAb;AACA,UAAIC,QAAQ,mBAASF,WAAT,CAAqB,KAAKG,eAA1B,CAAZ;AACAJ,aAAOK,WAAP,CAAmBF,KAAnB;AACA;;;4CACuB;AAAA,mBACK,KAAKR,KADV;AAAA,UAClBW,IADkB,UAClBA,IADkB;AAAA,UACZC,GADY,UACZA,GADY;AAAA,UACPC,QADO,UACPA,QADO;;AAEvB,UAAIC,WAAW,mBAASR,WAAT,CAAqB,KAAKG,eAA1B,CAAf;AACAK,eAASC,KAAT,GAAiB,OAAO,KAAKf,KAAL,CAAWe,KAAlB,KAA4B,WAA5B,GAA0C,KAAKf,KAAL,CAAWe,KAArD,GAA6D,CAA9E;;AAEH,UAAGF,YAAYD,GAAf,EAAmB;AAClBA,YAAII,QAAJ,CAAaL,KAAKM,eAAL,CAAqBJ,QAArB,CAAb,EAA6CK,IAA7C,CAAkDJ,QAAlD;AACA,OAFD,MAICK,QAAQC,IAAR,CAAa,gEAAb;AACE;;;wBACGC,I,EAAM;AAAA;;AACR,aAAO,UAACC,IAAD,EAAU;AACf,eAAKD,IAAL,IAAaC,IAAb;AACD,OAFD;AAGD;;;yCACoB,CAEpB;;;wCACmB;AACnB,WAAKC,qBAAL;AACA;;;yCACoB,CACpB;;;2CACsB;AACrB,WAAKrB,sBAAL;AACD;;;6BACQ;AACL,aAAO;AAAA;AAAA,UAAK,KAAK,KAAKE,GAAL,CAAS,eAAT,CAAV;AAAqC;AAAA;AAAA,YAAK,KAAK,KAAKA,GAAL,CAAS,iBAAT,CAAV;AAAwC,eAAKJ,KAAL,CAAWc;AAAnD;AAArC,OAAP;AACH;;;;EAzCoB,gBAAMU,S;;AA4C/BzB,WAAW0B,SAAX,GAAuB;AACtBb,OAAM,oBAAUc,MADM;AAEtBf,QAAO,oBAAUe,MAFK;AAGtBb,YAAW,oBAAUc,KAAV,CAAgBC,OAAOC,mBAAP,wBAAhB,EAA6DC,UAHlD;AAItBf,SAAQ,oBAAUgB;AAJI,CAAvB;;kBAOehC,U","file":"mapControl.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDom from 'react-dom';\nimport {ControlPosition} from '../utils/utils';\n/**\n* The component that defines a custom map control at a predifined position.\n*\n* @property {object} props\n* @property {google.maps.Map} props.map\n* @property {google.maps} props.maps\n* @property {string} props.position\n* @property {number} props.index\n*/\nclass MapControl extends React.Component {\n    constructor(props) {\n        super(props);\n        this.displayName = 'MapControl';\n        this.cleanMapControlContent = this.cleanMapControlContent.bind(this);\n        this.ref = this.ref.bind(this);\n    }\n    cleanMapControlContent() {\n    \tvar parent = ReactDom.findDOMNode(this.controlParent);\n    \tvar child = ReactDom.findDOMNode(this.controlChildren);\n    \tparent.appendChild(child);\n    }\n    loadMapControlContent() {\n    \tvar {maps, map, position} = this.props;\n    \tvar children = ReactDom.findDOMNode(this.controlChildren);\n    \tchildren.index = typeof this.props.index !== 'undefined' ? this.props.index : 1;\n\n\t\tif(position && map){\n\t\t\tmap.controls[maps.ControlPosition[position]].push(children);\n\t\t}\n\t\telse\n\t\t\tconsole.warn(\"You must provide your map control a specific control position.\");\n    }\n    ref(name) {\n      return (item) => {\n        this[name] = item;\n      };\n    }\n    componentWillMount() {\n\n    }\n    componentDidMount() {\n    \tthis.loadMapControlContent();\n    }\n    componentDidUpdate() {\n    }\n    componentWillUnmount() {\n      this.cleanMapControlContent();\n    }\n    render() {\n        return <div ref={this.ref(\"controlParent\")}><div ref={this.ref(\"controlChildren\")}>{this.props.children}</div></div>;\n    }\n}\n\nMapControl.propTypes = {\n\tmap : PropTypes.object,\n\tmaps : PropTypes.object,\n\tposition : PropTypes.oneOf(Object.getOwnPropertyNames(ControlPosition)).isRequired,\n\tindex : PropTypes.number\n}\n\nexport default MapControl;\n"]}