{"version":3,"sources":["../../src/components/marker.js"],"names":["Marker","props","displayName","state","marker","getOptions","bind","map","maps","MarkerClusterer","setMap","opacity","isNaN","Number","setOpacity","setState","addMarker","onClick","event","addListener","coords","getPosition","toJSON","onDragEnd","e","latLng","console","error","Error","options","position","icon","undefined","Object","assign","removeMarker","prevProps","prevState","setOptions","children","Children","cloneElement","child","anchor","Component","propTypes","object","shape","lng","number","lat"],"mappings":"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","file":"marker.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport MarkerWithLabel from 'markerwithlabel';\n/**\n* The component designed to implement the google.maps.Marker from the javascript api. <Marker /> components live within the context of any <Map /> component.\n* The Marker class is extended by [Marker With Label]{@link https://github.com/googlemaps/v3-utility-library/tree/master/markerwithlabel} see [npm package here]{@link https://www.npmjs.com/package/markerwithlabel}.\n* @memberof Map\n* @property {object} state\n* @property {google.maps.Marker} state.Marker\n* @property {object} props\n* @property {google.maps.Map} props.map\n* @property {google.maps} props.maps\n* @property {object} props.coords Defines the coordinate pair where this marker should exits.\n* @property {number} props.coords.lng Number defining longitude.\n* @property {number} props.coords.lat Number defining latitude.\n* @property {string|Icon} props.icon\n* @property {google.maps.MarkerOptions} props.options See [Marker Options Documentation]{@link https://developers.google.com/maps/documentation/javascript/3.exp/reference#MarkerOptions}\n*/\nclass Marker extends React.Component {\n    constructor(props) {\n        super(props);\n        this.displayName = 'Marker';\n        this.state = {\n        \tmarker : null\n        }\n\n        this.getOptions = this.getOptions.bind(this);\n    }\n    componentWillMount() {\n    \tif(this.props.map && this.props.maps) {\n    \t\tvar {map,maps, MarkerClusterer} = this.props;\n\n    \t\tvar marker = new (MarkerWithLabel(maps))(this.getOptions());\n\n    \t\tmarker.setMap(this.props.map);\n        const {opacity} = this.props;\n        if(opacity != null && !isNaN(Number(opacity))) {\n          marker.setOpacity(this.props.opacity);\n        }\n\n    \t\tthis.setState({marker});\n\n    \t\tif(MarkerClusterer) {\n          MarkerClusterer.addMarker(marker);\n        }\n\n    \t\tif(typeof this.props.onClick === 'function')\n\t    \t\tthis.props.maps.event.addListener(marker, 'click', e => {\n\t    \t\t\tif(this.props.onClick)\n\t    \t\t\t\tthis.props.onClick({coords : marker.getPosition().toJSON()})\n\t    \t\t});\n        if(typeof this.props.onDragEnd === 'function')\n          this.props.maps.event.addListener(marker, 'dragend', e=> {\n            this.props.onDragEnd(e.latLng.toJSON(), e);\n          })\n    \t}\n    \telse {\n    \t\t// Whoah boy! We need a map bigly.\n    \t\tconsole.error(new Error(\"<Marker /> components must be instantiated within a Map component. Please check your component's context.\"))\n    \t}\n    }\n    componentWillUpdate() {\n\n    }\n    getOptions() {\n\t\tvar options = {\n\t\t\tposition : this.props.coords,\n\t\t\ticon : this.props.icon ? this.props.icon : undefined\n\t\t}\n\t\tif(this.props.options)\n\t\t\toptions = Object.assign(options, this.props.options);\n    \treturn options;\n    }\n    componentWillUnmount() {\n  \t\tif(this.state.marker) {\n  \t\t\tthis.state.marker.setMap(null);\n  \t\t}\n  \t\tif(this.props.MarkerClusterer) {\n        this.props.MarkerClusterer.removeMarker(this.state.marker);\n      }\n    }\n    componentDidUpdate(prevProps, prevState) {\n    \tif(this.state.marker) {\n    \t\tthis.state.marker.setOptions(this.getOptions())\n    \t}\n    }\n    render() {\n    \tvar children = [];\n    \tif(this.props.children)\n    \t\tchildren = React.Children.map(this.props.children, child => React.cloneElement(child, {\n    \t\t\tmap : this.props.map,\n    \t\t\tmaps : this.props.maps,\n    \t\t\tanchor : this.state.marker\n    \t\t}));\n        return <div>{children}</div>;\n    }\n}\n\nMarker.propTypes = {\n\tmaps : PropTypes.object,\n\tmap : PropTypes.object,\n\tMarkerClusterer : PropTypes.object,\n\toptions : PropTypes.object,\n\tanchor : PropTypes.object,\n\tcoords : PropTypes.shape({\n\t\tlng : PropTypes.number,\n\t\tlat : PropTypes.number\n\t})\n}\n\nexport default Marker;\n"]}