{"version":3,"sources":["../../src/components/markerCluster.js"],"names":["MarkerCluster","props","displayName","state","MarkerClusterer","map","maps","options","gridSize","maxZoom","Object","assign","setState","console","error","Error","clearMarkers","children","Children","cloneElement","child","Component","propTypes","object"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;;;;;AACA;;;;;;;;;;;;;;IAcMA,a;;;AACF,2BAAYC,KAAZ,EAAmB;AAAA;;AAAA,kIACTA,KADS;;AAEf,cAAKC,WAAL,GAAmB,eAAnB;AACA,cAAKC,KAAL,GAAa;AACZC,6BAAkB;AADN,SAAb;AAHe;AAMlB;;;;6CAEoB;AACpB,gBAAG,KAAKH,KAAL,CAAWI,GAAX,IAAkB,KAAKJ,KAAL,CAAWK,IAAhC,EAAsC;AACrC,oBAAIC,UAAU,EAACC,UAAU,EAAX,EAAeC,SAAS,EAAxB,EAAd;;AAEA,oBAAG,KAAKR,KAAL,CAAWM,OAAd,EACCA,UAAUG,OAAOC,MAAP,CAAcJ,OAAd,EAAuB,KAAKN,KAAL,CAAWM,OAAlC,CAAV;;AAED,qBAAKK,QAAL,CAAc;AACbR,qCAAkB,kCAAoB,KAAKH,KAAL,CAAWI,GAA/B,EAAoC,EAApC,EAAwCE,OAAxC;AADL,iBAAd;AAGA,aATD,MAUK;AACJM,wBAAQC,KAAR,CAAc,IAAIC,KAAJ,CAAU,0IAAV,CAAd;AACA;AACD;;;+CACsB;AAAA,gBACjBX,eADiB,GACE,KAAKD,KADP,CACjBC,eADiB;;AAEtB,gBAAGA,eAAH,EAAoB;AACnBA,gCAAgBY,YAAhB;AACA;AACD;;;iCACQ;AAAA;;AACR,gBAAIC,WAAW,EAAf;AADQ,yBAEY,KAAKhB,KAFjB;AAAA,gBAEFI,GAFE,UAEFA,GAFE;AAAA,gBAEGC,IAFH,UAEGA,IAFH;;AAGR,gBAAG,KAAKL,KAAL,CAAWI,GAAX,IAAkB,KAAKJ,KAAL,CAAWK,IAA7B,IAAqC,KAAKH,KAAL,CAAWC,eAAnD,EACCa,WAAW,gBAAMC,QAAN,CAAeb,GAAf,CAAmB,KAAKJ,KAAL,CAAWgB,QAA9B,EAAwC;AAAA,uBAAS,gBAAME,YAAN,CAAmBC,KAAnB,EAA0B;AACrFhB,qCAAkB,OAAKD,KAAL,CAAWC,eADwD;AAErFC,4BAFqF;AAGrFC;AAHqF,iBAA1B,CAAT;AAAA,aAAxC,CAAX;AAKE,mBAAO;AAAA;AAAA;AAAMW;AAAN,aAAP;AACH;;;;EAxCuB,gBAAMI,S;;AA2ClCrB,cAAcsB,SAAd,GAA0B;AACzBjB,SAAM,oBAAUkB,MADS;AAEzBjB,UAAO,oBAAUiB,MAFQ;AAGzBhB,aAAU,oBAAUgB;AAHK,CAA1B;;kBAMevB,a","file":"markerCluster.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport MarkerClusterer from 'marker-clusterer-plus';\n/**\n* Clusters `<Marker />` components passed as children in props.children\n\n* @memberof Map\n*\n* @property {object} props\n* @property {object} props.map The google.maps.Map object from the map component.\n* @property {Array.<Map.Marker>} props.children These should only be {@link Marker} components.\n* @property {MarkerClustererOptions} props.options The MarkerClusterer instantiates with these options.\n* @property {object} state The state of the MarkerCluster component.\n* @property {MarkerClusterer} state.MarkerClusterer The instance of {@link MarkerClusterer} for this component.\n*\n*\n*/\nclass MarkerCluster extends React.Component {\n    constructor(props) {\n        super(props);\n        this.displayName = 'MarkerCluster';\n        this.state = {\n        \tMarkerClusterer : null\n        }\n    }\n\n    componentWillMount() {\n    \tif(this.props.map && this.props.maps) {\n\t    \tvar options = {gridSize: 50, maxZoom: 15}\n\n\t    \tif(this.props.options)\n\t    \t\toptions = Object.assign(options, this.props.options);\n\n\t    \tthis.setState({\n\t    \t\tMarkerClusterer : new MarkerClusterer(this.props.map, [], options)\n\t    \t});\n    \t}\n    \telse {\n    \t\tconsole.error(new Error(\"You must run <MarkerCluster /> components within the context of a <Map /> component. Otherwise, provide the maps and map props manually.\"));\n    \t}\n    }\n    componentWillUnmount() {\n    \tvar {MarkerClusterer} = this.state;\n    \tif(MarkerClusterer) {\n    \t\tMarkerClusterer.clearMarkers();\n    \t}\n    }\n    render() {\n    \tvar children = [];\n    \tvar { map, maps } = this.props;\n    \tif(this.props.map && this.props.maps && this.state.MarkerClusterer)\n\t    \tchildren = React.Children.map(this.props.children, child => React.cloneElement(child, {\n\t    \t\tMarkerClusterer : this.state.MarkerClusterer,\n\t    \t\tmap,\n\t    \t\tmaps\n\t    \t}))\n        return <div>{children}</div>;\n    }\n}\n\nMarkerCluster.propTypes = {\n\tmap : PropTypes.object,\n\tmaps : PropTypes.object,\n\toptions : PropTypes.object\n}\n\nexport default MarkerCluster;\n"]}