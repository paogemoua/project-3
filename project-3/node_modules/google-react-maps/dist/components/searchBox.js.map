{"version":3,"sources":["../../src/components/searchBox.js"],"names":["SearchBox","props","displayName","state","searchBox","internalPosition","postRender","bind","ref","boundsListener","placesListener","timer","map","maps","position","input","findDOMNode","container","child","places","remove","addListener","autoRefreshPlaces","clearTimeout","setTimeout","map_bounds","getBounds","setBounds","onPlacesChanged","query","value","service","PlacesService","textSearch","bounds","status","PlacesServiceStatus","OK","getPlaces","controls","ControlPosition","push","insertAt","length","setState","console","warn","Error","name","item","nextProps","nextState","prevProps","prevState","removeAt","Wrapper","wrapper","placeholder","style","className","Component","propTypes","string","isRequired","func","bool","defaultProps"],"mappings":"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","file":"searchBox.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDom from 'react-dom';\n\nclass SearchBox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.displayName = 'SearchBox';\n    this.state = {\n    \tsearchBox : null,\n    \tinternalPosition : -1\n    }\n    this.postRender = this.postRender.bind(this);\n    this.ref = this.ref.bind(this);\n    this.boundsListener = null;\n    this.placesListener = null;\n    this.timer = null;\n  }\n  componentDidMount() {\n  \t this.postRender();\n  }\n  postRender() {\n  \tconst { map, maps } = this.props;\n    let { position } = this.props;\n\n  \tif(map && maps) {\n    \tconst input = ReactDom.findDOMNode(this.input);\n    \tconst container = ReactDom.findDOMNode(this.child);\n    \tconst searchBox = new maps.places.SearchBox(input);\n\n      this.timer = null;\n\n      if (this.boundsListener) {\n        this.boundsListener.remove();\n      }\n      if (this.placesListener) {\n        this.placesListener.remove();\n      }\n\n        this.boundsListener = map.addListener('bounds_changed', () => {\n          if (this.props.autoRefreshPlaces) {\n            if(this.timer) {\n                clearTimeout(this.timer);\n            }\n            this.timer = setTimeout(() => {\n              const map_bounds = map.getBounds();\n              searchBox.setBounds(map_bounds);\n\n              if(typeof this.props.onPlacesChanged === 'function' && this.input) {\n                  const query = this.input.value;\n                  const service = new maps.places.PlacesService(map);\n                  query ? service.textSearch({\n                      query,\n                      bounds: map_bounds\n                  }, (places, status) => {\n                      if(status == maps.places.PlacesServiceStatus.OK) {\n                          this.props.onPlacesChanged(places);\n                      }\n                  }) : '';\n              }\n            }, 1000);\n          }\n  \t    });\n\n  \t\tthis.placesListener = searchBox.addListener('places_changed', () => {\n        if(typeof this.props.onPlacesChanged === 'function') {\n          this.props.onPlacesChanged(searchBox.getPlaces());\n        }\n      });\n\n    \tif (!position) {\n        position = \"TOP_LEFT\";\n      }\n\n      if (this.state.internalPosition < 0) {\n        map.controls[maps.ControlPosition[position]].push(container);\n      } else {\n        map.controls[maps.ControlPosition[position]].insertAt(this.state.internalPosition, container);\n      }\n\n  \t\tvar internalPosition = map.controls[maps.ControlPosition[position]].length-1;\n\n  \t\tif (this.state.internalPosition != internalPosition) {\n        this.setState({\n  \t\t\t\tinternalPosition\n  \t\t\t});\n      }\n  \t} else {\n      console.warn(new Error(\"You must pass this component as a control to a Map component.\"))\n    }\n  }\n  ref(name) {\n    return (item) => {\n      this[name] = item;\n    };\n  }\n  shouldComponentUpdate(nextProps, nextState) {\n  \treturn false;\n  }\n  componentDidUpdate(prevProps, prevState) {\n  \tif (this.state.internalPosition > -1 && prevState.internalPosition != -1) {\n      this.postRender();\n    }\n  }\n  componentWillUnmount() {\n    const { map, maps, position } = this.props;\n    if (this.state.internalPosition >= 0) {\n      map.controls[maps.ControlPosition[position || 'TOP_LEFT']]\n        .removeAt(this.state.internalPosition);\n    }\n  }\n  render() {\n  \tconst Wrapper = this.props.wrapper;\n  \tif(Wrapper) {\n      return <div ref={this.ref('parent')}><div ref={this.ref('child')}><Wrapper><input type=\"text\" ref={this.ref('input')} placeholder={this.props.placeholder} style={this.props.style} className={this.props.className} /></Wrapper></div></div>\n    } else {\n      return <div ref={this.ref('parent')}><div ref={this.ref('child')}><input type=\"text\" ref={this.ref('input')} placeholder={this.props.placeholder} style={this.props.style} className={this.props.className} /></div></div>;\n    }\n  }\n}\n\nSearchBox.propTypes = {\n  placeholder : PropTypes.string,\n\tposition : PropTypes.string.isRequired,\n\twrapper : PropTypes.func,\n\tonPlacesChanged : PropTypes.func.isRequired,\n  autoRefreshPlaces: PropTypes.bool,\n}\n\nSearchBox.defaultProps = {\n  autoRefreshPlaces: false,\n}\n\nexport default SearchBox;\n"]}